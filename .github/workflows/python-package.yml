name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    env:
      USING_COVERAGE: "3.10"

    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: python -m pip install tox-gh-actions poetry

    - name: Run tox
      run: poetry run tox

    - name: Upload coverage to Codecov
      if: contains(env.USING_COVERAGE, matrix.python-version) && matrix.platform == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

  package:
    name: Build package
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install poetry
      run: python -m pip install poetry

    - name: Build package
      run: poetry build

    - name: Show result
      run: ls -l dist

    - name: Install package
      run: python -m pip install .

    - name: Import package
      run: python -c "import pyseto; print(pyseto.__version__)"
